/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as StatsUsernameImport } from './routes/stats.$username'
import { Route as SavedroutinesUsernameImport } from './routes/savedroutines.$username'
import { Route as ProfileUsernameImport } from './routes/profile.$username'
import { Route as PreviousworkoutsUsernameImport } from './routes/previousworkouts.$username'
import { Route as HomeUsernameImport } from './routes/home.$username'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StatsUsernameRoute = StatsUsernameImport.update({
  id: '/stats/$username',
  path: '/stats/$username',
  getParentRoute: () => rootRoute,
} as any)

const SavedroutinesUsernameRoute = SavedroutinesUsernameImport.update({
  id: '/savedroutines/$username',
  path: '/savedroutines/$username',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUsernameRoute = ProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => rootRoute,
} as any)

const PreviousworkoutsUsernameRoute = PreviousworkoutsUsernameImport.update({
  id: '/previousworkouts/$username',
  path: '/previousworkouts/$username',
  getParentRoute: () => rootRoute,
} as any)

const HomeUsernameRoute = HomeUsernameImport.update({
  id: '/home/$username',
  path: '/home/$username',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/home/$username': {
      id: '/home/$username'
      path: '/home/$username'
      fullPath: '/home/$username'
      preLoaderRoute: typeof HomeUsernameImport
      parentRoute: typeof rootRoute
    }
    '/previousworkouts/$username': {
      id: '/previousworkouts/$username'
      path: '/previousworkouts/$username'
      fullPath: '/previousworkouts/$username'
      preLoaderRoute: typeof PreviousworkoutsUsernameImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameImport
      parentRoute: typeof rootRoute
    }
    '/savedroutines/$username': {
      id: '/savedroutines/$username'
      path: '/savedroutines/$username'
      fullPath: '/savedroutines/$username'
      preLoaderRoute: typeof SavedroutinesUsernameImport
      parentRoute: typeof rootRoute
    }
    '/stats/$username': {
      id: '/stats/$username'
      path: '/stats/$username'
      fullPath: '/stats/$username'
      preLoaderRoute: typeof StatsUsernameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home/$username': typeof HomeUsernameRoute
  '/previousworkouts/$username': typeof PreviousworkoutsUsernameRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/savedroutines/$username': typeof SavedroutinesUsernameRoute
  '/stats/$username': typeof StatsUsernameRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home/$username': typeof HomeUsernameRoute
  '/previousworkouts/$username': typeof PreviousworkoutsUsernameRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/savedroutines/$username': typeof SavedroutinesUsernameRoute
  '/stats/$username': typeof StatsUsernameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/home/$username': typeof HomeUsernameRoute
  '/previousworkouts/$username': typeof PreviousworkoutsUsernameRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/savedroutines/$username': typeof SavedroutinesUsernameRoute
  '/stats/$username': typeof StatsUsernameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home/$username'
    | '/previousworkouts/$username'
    | '/profile/$username'
    | '/savedroutines/$username'
    | '/stats/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home/$username'
    | '/previousworkouts/$username'
    | '/profile/$username'
    | '/savedroutines/$username'
    | '/stats/$username'
  id:
    | '__root__'
    | '/'
    | '/home/$username'
    | '/previousworkouts/$username'
    | '/profile/$username'
    | '/savedroutines/$username'
    | '/stats/$username'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeUsernameRoute: typeof HomeUsernameRoute
  PreviousworkoutsUsernameRoute: typeof PreviousworkoutsUsernameRoute
  ProfileUsernameRoute: typeof ProfileUsernameRoute
  SavedroutinesUsernameRoute: typeof SavedroutinesUsernameRoute
  StatsUsernameRoute: typeof StatsUsernameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeUsernameRoute: HomeUsernameRoute,
  PreviousworkoutsUsernameRoute: PreviousworkoutsUsernameRoute,
  ProfileUsernameRoute: ProfileUsernameRoute,
  SavedroutinesUsernameRoute: SavedroutinesUsernameRoute,
  StatsUsernameRoute: StatsUsernameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home/$username",
        "/previousworkouts/$username",
        "/profile/$username",
        "/savedroutines/$username",
        "/stats/$username"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home/$username": {
      "filePath": "home.$username.tsx"
    },
    "/previousworkouts/$username": {
      "filePath": "previousworkouts.$username.tsx"
    },
    "/profile/$username": {
      "filePath": "profile.$username.tsx"
    },
    "/savedroutines/$username": {
      "filePath": "savedroutines.$username.tsx"
    },
    "/stats/$username": {
      "filePath": "stats.$username.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
